#!/usr/bin/env python

import argparse

from sylva_libc.stdlib import StdLib


def generate(input_files, output_file, libclang=None):
    stdlib = StdLib(input_files, libclang)
    builtins = [builtin.emit_sylva() for builtin in stdlib.builtins]
    definitions = [cdef.emit_sylva() for cdef in stdlib.definitions]
    with open(output_file, 'wb') as fobj:
        fobj.write('\n'.join(builtins + [''] + definitions).encode('utf-8'))


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument(
        '--libclang', type=str,
        help='Path to libclang library'
    )
    parser.add_argument(
        'input_files', type=str, nargs='+',
        help='Files to process'
    )
    parser.add_argument(
        '-o', '--output_file', type=str,
        help='Output for serialized definitions to'
    )

    args = parser.parse_args()

    generate(args.input_files, args.output_file, args.libclang)


main()
